backend\app\backend_pre_start.py
---
import logging
from sqlalchemy import Engine
from sqlmodel import Session, select
from tenacity import after_log, before_log, retry, stop_after_attempt, wait_fixed
from app.core.db import engine
---

backend\app\crud.py
---
from typing import Any
from sqlmodel import Session, select
from app.core.security import get_password_hash, verify_password
from app.models import Item, ItemCreate, User, UserCreate, UserUpdate
---

backend\app\initial_data.py
---
import logging
from sqlmodel import Session
from app.core.db import engine, init_db
---

backend\app\main.py
---
from fastapi import FastAPI
from fastapi.routing import APIRoute
from starlette.middleware.cors import CORSMiddleware
from app.api.main import api_router
from app.core.config import settings
---

backend\app\models.py
---
from sqlmodel import Field, Relationship, SQLModel
---

backend\app\tests_pre_start.py
---
import logging
from sqlalchemy import Engine
from sqlmodel import Session, select
from tenacity import after_log, before_log, retry, stop_after_attempt, wait_fixed
from app.core.db import engine
---

backend\app\utils.py
---
import logging
from dataclasses import dataclass
from datetime import datetime, timedelta
from pathlib import Path
from typing import Any
import emails
from jinja2 import Template
from jose import JWTError, jwt
from app.core.config import settings
---

backend\app\alembic\env.py
---
import os
from logging.config import fileConfig
from alembic import context
from sqlalchemy import engine_from_config, pool
from app.models import SQLModel
---

backend\app\alembic\versions\e2412789c190_initialize_models.py
---
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from alembic import op
---

backend\app\api\deps.py
---
from collections.abc import Generator
from typing import Annotated
from fastapi import Depends, HTTPException, status
from fastapi.security import OAuth2PasswordBearer
from jose import JWTError, jwt
from pydantic import ValidationError
from sqlmodel import Session
from app.core import security
from app.core.config import settings
from app.core.db import engine
from app.models import TokenPayload, User
---

backend\app\api\main.py
---
from fastapi import APIRouter
from app.api.routes import items, login, users, utils
---

backend\app\api\routes\items.py
---
from typing import Any
from fastapi import APIRouter, HTTPException
from sqlmodel import func, select
from app.api.deps import CurrentUser, SessionDep
from app.models import Item, ItemCreate, ItemOut, ItemsOut, ItemUpdate, Message
---

backend\app\api\routes\login.py
---
from datetime import timedelta
from typing import Annotated, Any
from fastapi import APIRouter, Depends, HTTPException
from fastapi.responses import HTMLResponse
from fastapi.security import OAuth2PasswordRequestForm
from app import crud
from app.api.deps import CurrentUser, SessionDep, get_current_active_superuser
from app.core import security
from app.core.config import settings
from app.core.security import get_password_hash
from app.models import Message, NewPassword, Token, UserOut
from app.utils import generate_password_reset_token, generate_reset_password_email, send_email, verify_password_reset_token
---

backend\app\api\routes\users.py
---
from typing import Any
from fastapi import APIRouter, Depends, HTTPException
from sqlmodel import col, delete, func, select
from app import crud
from app.api.deps import CurrentUser, SessionDep, get_current_active_superuser
from app.core.config import settings
from app.core.security import get_password_hash, verify_password
from app.models import Item, Message, UpdatePassword, User, UserCreate, UserCreateOpen, UserOut, UsersOut, UserUpdate, UserUpdateMe
from app.utils import generate_new_account_email, send_email
---

backend\app\api\routes\utils.py
---
from fastapi import APIRouter, Depends
from pydantic.networks import EmailStr
from app.api.deps import get_current_active_superuser
from app.models import Message
from app.utils import generate_test_email, send_email
---

backend\app\core\config.py
---
import secrets
import warnings
from typing import Annotated, Any, Literal
from pydantic import AnyUrl, BeforeValidator, HttpUrl, PostgresDsn, computed_field, model_validator
from pydantic_core import MultiHostUrl
from pydantic_settings import BaseSettings, SettingsConfigDict
from typing_extensions import Self
---

backend\app\core\db.py
---
from sqlmodel import Session, create_engine, select
from app import crud
from app.core.config import settings
from app.models import User, UserCreate
---

backend\app\core\security.py
---
from datetime import datetime, timedelta
from typing import Any
from jose import jwt
from passlib.context import CryptContext
from app.core.config import settings
---

backend\app\tests\conftest.py
---
from collections.abc import Generator
import pytest
from fastapi.testclient import TestClient
from sqlmodel import Session, delete
from app.core.config import settings
from app.core.db import engine, init_db
from app.main import app
from app.models import Item, User
from app.tests.utils.user import authentication_token_from_email
from app.tests.utils.utils import get_superuser_token_headers
---

backend\app\tests\api\routes\test_items.py
---
from fastapi.testclient import TestClient
from sqlmodel import Session
from app.core.config import settings
from app.tests.utils.item import create_random_item
---

backend\app\tests\api\routes\test_login.py
---
from unittest.mock import patch
from fastapi.testclient import TestClient
from app.core.config import settings
from app.utils import generate_password_reset_token
---

backend\app\tests\api\routes\test_users.py
---
from unittest.mock import patch
from fastapi.testclient import TestClient
from sqlmodel import Session
from app import crud
from app.core.config import settings
from app.models import UserCreate
from app.tests.utils.utils import random_email, random_lower_string
---

backend\app\tests\crud\test_user.py
---
from fastapi.encoders import jsonable_encoder
from sqlmodel import Session
from app import crud
from app.core.security import verify_password
from app.models import User, UserCreate, UserUpdate
from app.tests.utils.utils import random_email, random_lower_string
---

backend\app\tests\scripts\test_backend_pre_start.py
---
from unittest.mock import MagicMock, patch
from sqlmodel import select
from app.backend_pre_start import init, logger
---

backend\app\tests\scripts\test_test_pre_start.py
---
from unittest.mock import MagicMock, patch
from sqlmodel import select
from app.tests_pre_start import init, logger
---

backend\app\tests\utils\item.py
---
from sqlmodel import Session
from app import crud
from app.models import Item, ItemCreate
from app.tests.utils.user import create_random_user
from app.tests.utils.utils import random_lower_string
---

backend\app\tests\utils\user.py
---
from fastapi.testclient import TestClient
from sqlmodel import Session
from app import crud
from app.core.config import settings
from app.models import User, UserCreate, UserUpdate
from app.tests.utils.utils import random_email, random_lower_string
---

backend\app\tests\utils\utils.py
---
import random
import string
from fastapi.testclient import TestClient
from app.core.config import settings
---

backend_pre_start.py,crud.py,initial_data.py,main.py,models.py,tests_pre_start.py,utils.py,env.py,e2412789c190_initialize_models.py,deps.py,main.py,items.py,login.py,users.py,utils.py,config.py,db.py,security.py,conftest.py,test_items.py,test_login.py,test_users.py,test_user.py,test_backend_pre_start.py,test_test_pre_start.py,item.py,user.py,utils.py,